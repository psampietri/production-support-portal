import React from 'react';
import { Accordion, AccordionSummary, AccordionDetails, Typography, Box, Chip, List, ListItem, ListItemText, Link } from '@mui/material';
import ExpandMoreIcon from '@mui/icons-material/ExpandMore';
import FolderIcon from '@mui/icons-material/Folder';

const SeverityChip = ({ severity }) => {
    const color = {
        'critical': 'error',
        'high': 'warning',
    }[severity.toLowerCase()] || 'default';
    return <Chip label={severity} color={color} size="small" sx={{ textTransform: 'capitalize' }} />;
};

function RepositoryCard({ repository, instances, onDataRefresh }) {
  return (
    <Accordion sx={{ bgcolor: 'background.paper' }}>
      <AccordionSummary expandIcon={<ExpandMoreIcon />}>
        <Box display="flex" alignItems="center" width="100%" flexWrap="wrap" gap={1}>
          <FolderIcon />
          <Typography sx={{ ml: 1, flex: 1, minWidth: '300px', fontWeight: 'bold' }}>
            {repository.fullName}
          </Typography>
          <Chip label={`${instances.length} Vulnerabilities`} color="warning" size="small" />
        </Box>
      </AccordionSummary>
      <AccordionDetails sx={{ borderTop: '1px solid rgba(255, 255, 255, 0.12)' }}>
        <List dense>
          {instances.map(instance => (
            <ListItem key={instance.id}>
              <SeverityChip severity={instance.vulnerability.severity} />
              <ListItemText 
                primary={instance.vulnerability.description}
                secondary={`Package: ${instance.vulnerability.package}`}
                sx={{ ml: 2 }}
              />
              {instance.jiraTicket && (
                <Chip
                  label={`${instance.jiraTicket.ticketKey}`}
                  component="a"
                  href={instance.jiraTicket.url}
                  target="_blank"
                  clickable
                  color="info"
                  size="small"
                  sx={{ ml: 'auto' }}
                />
              )}
            </ListItem>
          ))}
        </List>
      </AccordionDetails>
    </Accordion>
  );
}

export default RepositoryCard;